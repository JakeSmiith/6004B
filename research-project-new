cd "C:\Users\jakes\Downloads"
tempfile daily mon quart
import excel using "VIX_historical.xlsx", sheet("Daily") firstrow clear
gen date = observation_date
format date %tdNN/DD/CCYY
gen freq = "daily"
drop observation_date
rename VIXCLS  vix
rename T10Y2Y  t10y2y
rename T10YIE  t10yie
rename WTI     wti
rename BC      brent
tsset date, daily
save `daily', replace
list date brent in 1/15
save `daily', replace

import excel using "VIX_historical.xlsx", sheet("Monthly") firstrow clear
rename observation_date date
list date WHEAT in 1/15
rename TB3S    tbill3m
rename HHNG    natgas
rename CORN    corn
rename WHEAT   wheat
rename SOYBEAN soybean
gen date = observation_date
format date %tdNN/DD/CCYY
tsset date, daily
tsfill
ipolate tbill3m   date, gen(tb3m_d)
ipolate natgas    date, gen(natgas_d)
ipolate corn      date, gen(corn_d)
ipolate wheat     date, gen(wheat_d)
ipolate soybean   date, gen(soybean_d)
list date tb3m_d natgas_d corn_d wheat_d soybean_d if inrange(date, td(01jan1990), td(15jan1990)), clean noobs
save `mon', replace

import excel using "VIX_historical.xlsx", sheet("Quarterly") firstrow clear
gen date = observation_date
format date %tdNN/DD/CCYY
tsset date, daily
tsfill
ipolate gdp date, gen(gdp_d)
list date gdp gdp_d if inrange(date, td(01jan1990), td(15jan1990)), clean noobs
save `quart', replace

clear
use `daily'
merge 1:1 date using "`mon'"
drop _merge
merge 1:1 date using "`quart'"
save vix_all_frequencies.dta, replace

list date gdp_d wheat_d in 1/15

use vix_all_frequencies.dta, clear
encode freq, gen(panel)
xtset panel date
xtdescribe

xtile decile = vix, nq(10)
gen crisis10 = decile == 10
label define cris_lbl2 0 "Normal" 1 "Crisis"
label values crisis10 cris_lbl2

quietly sum vix, detail
local p90 = r(p90)
histogram vix, bin(50) normal xline(`p90', lcolor(red) lpattern(dash)) title("VIX Distribution with Top-Decile Cutoff") xtitle("VIX Level") ytitle("Frequency") note("Red line marks the minimum VIX value in the top decile (`=string(`p90',"%9.2f")')")
save vix_all_frequencies.dta, replace

import delimited "C:\Users\jakes\Downloads\sp500.csv", varnames(1) clear
rename date date_str
gen date = date(date_str, "DMY")
format date %tdNN/DD/CCYY
list date_str adjusted_close in 1/15
drop date_str
keep date adjusted_close
rename adjusted_close sp_adjclose
save "sp_returns.dta", replace

use vix_all_frequencies.dta, clear
drop _merge
merge 1:1 date using sp_full.dta
drop _merge
tsset date, daily
drop if missing(brent)
list brent soybean_d gdp_d date in 1/15

sort date
gen ln_sp500 = log(sp_adjclose)
gen r_sp = 100*(ln_sp500 - ln_sp500[_n-1])
list date sp_adjclose ln_sp500 r_sp in 1/15, clean noobs
save vix_all_frequencies.dta, replace

sort date
gen log_natgas_d = ln(natgas_d)
gen log_corn_d = ln(corn_d)
gen log_wheat_d = ln(wheat_d)
gen log_soybean_d = ln(soybean_d)
gen log_brent = ln(brent)
gene log_wti = ln(wti)

generate byte bad_log = (natgas_d<=0 | corn_d<=0 | wheat_d<=0 | soybean_d<=0 | brent<=0 | wti<=0)
list date if bad_log
list log_corn_d log_soybean_d log_wti date in 1/15

sort date
gen r_natgas_d  = 100*(log_natgas_d - log_natgas_d[_n-1])
gen r_corn_d = 100*(log_corn_d - log_corn_d[_n-1])
gen r_wheat_d = 100*(log_wheat_d - log_wheat_d[_n-1])
gen r_soybean_d = 100*(log_soybean_d - log_soybean_d[_n-1])
gen r_brent = 100*(log_brent - log_brent[_n-1])
gen r_wti = 100*(log_wti - log_wti[_n-1])
drop if _n==1

reg r_brent r_sp, robust
foreach a in brent wti natgas corn wheat soybean {
    local ra = "r_`a'"
    display "=== Regression of `ra' on market ==="
    reg `ra' r_sp, robust
}

reg r_brent c.r_sp##i.crisis10, robust
local assets natgas_d corn_d wheat_d soybean_d brent wti
foreach a of local assets {
    di as txt "===== `a' (VIX top-decile crisis) ====="
    reg r_`a' c.r_sp##i.crisis10, robust
    di as txt ""
}

gen crisisGFC   = inrange(date, td(15sep2008), td(9mar2009))
gen crisisCOVID = inrange(date, td(20feb2020), td(30apr2020))
label var crisisGFC   "GFC: 15Sep2008–09Mar2009"
label var crisisCOVID "COVID-19: 20Feb2020–30Apr2020"

di as txt "=== Brent vs S&P during GFC ==="
reg  r_brent c.r_sp##i.crisisGFC, robust
di as txt ""
di as txt "=== Brent vs S&P during COVID-19 ==="
reg  r_brent c.r_sp##i.crisisCOVID, robust
foreach a in brent wti natgas corn wheat soybean {
    foreach per in GFC COVID {
        di as txt "=== `a': `per' window ==="
        reg r_`a' c.r_sp##i.crisis`per', robust
        di as txt ""
    }
}
save vix_all_frequencies.dta, replace

ssc install rangestat, replace
use vix_all_frequencies.dta, clear
tsset date

tempfile f_wti f_brent f_nat f_corn f_wheat f_soy

//Calculating observation number for GFC and Covid19
sort date
gen obs_no = _n
list date obs_no if date == td(15sep2008) | date == td(9mar2009), clean noobs
list date obs_no if date == td(20feb2020) | date == td(30apr2020), clean noobs


//Table output

// Baseline
mkdir "C:\stata_output"
cd "C:\stata_output"
putdocx clear
putdocx begin
putdocx paragraph
putdocx text ("Baseline Regressions: Asset Returns on Market Return"), bold
foreach a in r_natgas_d r_corn_d r_wheat_d r_soybean_d r_brent r_wti {
    regress `a' r_sp, robust
    local shortname = substr("`a'",3,3)
    putdocx paragraph
    putdocx text ("Regression of `a' on Market Return"), italic
    putdocx table tbl_`shortname' = etable
    putdocx table tbl_`shortname'(1,.), halign(center)
}

putdocx save "baseline_regressions.docx", replace

// 90th percentile crisis interaction
mkdir "C:\stata_output"
cd "C:\stata_output"
putdocx clear
putdocx begin
putdocx paragraph
putdocx text ("Crisis Regressions: Asset Returns on Market Return × VIX Top Decile"), bold
local assets natgas_d corn_d wheat_d soybean_d brent wti
foreach a of local assets {
    regress r_`a' c.r_sp##i.crisis10, robust
    local shortname = substr("`a'", 1, 3)
    putdocx paragraph
    putdocx text ("Regression of r_`a' on Market Return × Crisis10"), italic
    putdocx table tblc_`shortname' = etable
    putdocx table tblc_`shortname'(1,.), halign(center)
}
putdocx save "crisis10_regressions.docx", replace

cd "C:\stata_output"
putdocx clear
putdocx begin

putdocx paragraph
putdocx text("GFC Subsample Regressions (15 Sep 2008 – 9 Mar 2009)"), bold

// Reg & Table output for just GFC

// Brent
reg r_brent r_sp in 4754/4874, robust
putdocx paragraph
putdocx text(`"r_brent regressed on r_sp during GFC"`), italic
putdocx table t1 = etable
putdocx table t1(1,.), halign(center)

// wti
reg r_wti r_sp in 4754/4874, robust
putdocx paragraph
putdocx text(`"r_wti regressed on r_sp during GFC"`), italic
putdocx table t2 = etable
putdocx table t2(1,.), halign(center)

// Natgas
reg r_natgas r_sp in 4754/4874, robust
putdocx paragraph
putdocx text(`"r_natgas regressed on r_sp during GFC"`), italic
putdocx table t3 = etable
putdocx table t3(1,.), halign(center)

// Corn
reg r_corn r_sp in 4754/4874, robust
putdocx paragraph
putdocx text(`"r_corn regressed on r_sp during GFC"`), italic
putdocx table t4 = etable
putdocx table t4(1,.), halign(center)

// Wheat
reg r_wheat r_sp in 4754/4874, robust
putdocx paragraph
putdocx text(`"r_wheat regressed on r_sp during GFC"`), italic
putdocx table t5 = etable
putdocx table t5(1,.), halign(center)

//Soybean
reg r_soybean r_sp in 4754/4874, robust
putdocx paragraph
putdocx text(`"r_soybean regressed on r_sp during GFC"`), italic
putdocx table t6 = etable
putdocx table t6(1,.), halign(center)
putdocx save "gfc_manual_regressions.docx", replace


// Covid
putdocx clear
putdocx begin
// Brent
reg r_brent r_sp in 7647/7695, robust
putdocx paragraph
putdocx text(`"r_brent regressed on r_sp during COVID-19"`), italic
putdocx table t1 = etable
putdocx table t1(1,.), halign(center)

// wti
reg r_wti r_sp in 7647/7695, robust
putdocx paragraph
putdocx text(`"r_wti regressed on r_sp during COVID-19"`), italic
putdocx table t2 = etable
putdocx table t2(1,.), halign(center)

// Natgas
reg r_natgas r_sp in 7647/7695, robust
putdocx paragraph
putdocx text(`"r_natgas regressed on r_sp during COVID-19"`), italic
putdocx table t3 = etable
putdocx table t3(1,.), halign(center)

// Corn
reg r_corn r_sp in 7647/7695, robust
putdocx paragraph
putdocx text(`"r_corn regressed on r_sp during COVID-19"`), italic
putdocx table t4 = etable
putdocx table t4(1,.), halign(center)

// Wheat
reg r_wheat r_sp in 7647/7695, robust
putdocx paragraph
putdocx text(`"r_wheat regressed on r_sp during COVID-19"`), italic
putdocx table t5 = etable
putdocx table t5(1,.), halign(center)

//Soybean
reg r_soybean r_sp in 7647/7695, robust
putdocx paragraph
putdocx text(`"r_soybean regressed on r_sp during COVID-19"`), italic
putdocx table t6 = etable
putdocx table t6(1,.), halign(center)
putdocx save "covid_manual_regressions.docx", replace


//Rolling Betas

//WTI
preserve
rangestat (reg) r_wti    r_sp, interval(date -59 0)
keep date b_r_sp
rename b_r_sp beta60_r_wti
save `f_wti', replace
restore

//Brent
preserve
rangestat (reg) r_brent r_sp, interval(date -59 0)
keep date b_r_sp
rename b_r_sp beta60_r_brent
save `f_brent', replace
restore

//Natgas
preserve
rangestat (reg) r_natgas r_sp, interval(date -59 0)
keep date b_r_sp
rename b_r_sp beta60_r_natgas
save `f_nat', replace
restore

//Corn
preserve
rangestat (reg) r_corn  r_sp, interval(date -59 0)
keep date b_r_sp
rename b_r_sp beta60_r_corn
save `f_corn', replace
restore

//Wheat
preserve
rangestat (reg) r_wheat r_sp, interval(date -59 0)
keep date b_r_sp
rename b_r_sp beta60_r_wheat
save `f_wheat', replace
restore

//Soybean
preserve
rangestat (reg) r_soybean r_sp, interval(date -59 0)
keep date b_r_sp
rename b_r_sp beta60_r_soybean
save `f_soy', replace
restore

merge 1:1 date using `f_wti'
drop _merge
merge 1:1 date using `f_brent'
drop _merge
merge 1:1 date using `f_nat'
drop _merge
merge 1:1 date using `f_corn'
drop _merge
merge 1:1 date using `f_wheat'
drop _merge
merge 1:1 date using `f_soy'
drop _merge

list date beta60_* in 60/70, clean noobs

tempfile f_wti30 f_brent30 f_nat30 f_corn30 f_wheat30 f_soy30 

// WTI 30-day
preserve
  rangestat (reg) r_wti    r_sp, interval(date -29 0)
  keep date b_r_sp
  rename b_r_sp beta30_r_wti
  save `f_wti30', replace
restore

// Brent 30-day
preserve
  rangestat (reg) r_brent  r_sp, interval(date -29 0)
  keep date b_r_sp
  rename b_r_sp beta30_r_brent
  save `f_brent30', replace
restore

// NatGas 30-day 
preserve
  rangestat (reg) r_natgas r_sp, interval(date -29 0)
  keep date b_r_sp
  rename b_r_sp beta30_r_natgas
  save `f_nat30', replace
restore

// Corn 30-day 
preserve
  rangestat (reg) r_corn   r_sp, interval(date -29 0)
  keep date b_r_sp
  rename b_r_sp beta30_r_corn
  save `f_corn30', replace
restore

// Wheat 30-day 
preserve
  rangestat (reg) r_wheat  r_sp, interval(date -29 0)
  keep date b_r_sp
  rename b_r_sp beta30_r_wheat
  save `f_wheat30', replace
restore

// Soybean 30-day
preserve
  rangestat (reg) r_soybean r_sp, interval(date -29 0)
  keep date b_r_sp
  rename b_r_sp beta30_r_soybean
  save `f_soy30', replace
restore

merge 1:1 date using `f_wti30'
drop _merge
merge 1:1 date using `f_brent30'
drop _merge
merge 1:1 date using `f_nat30'
drop _merge
merge 1:1 date using `f_corn30'
drop _merge
merge 1:1 date using `f_wheat30'
drop _merge
merge 1:1 date using `f_soy30'
drop _merge


tempfile f_wti120 f_brent120 f_nat120 f_corn120 f_wheat120 f_soy120 

// WTI 120-day 
preserve
  rangestat (reg) r_wti    r_sp, interval(date -119 0)
  keep date b_r_sp
  rename b_r_sp beta120_r_wti
  save `f_wti120', replace
restore

// Brent 120-day 
preserve
  rangestat (reg) r_brent  r_sp, interval(date -119 0)
  keep date b_r_sp
  rename b_r_sp beta120_r_brent
  save `f_brent120', replace
restore

// NatGas 120-day 
preserve
  rangestat (reg) r_natgas r_sp, interval(date -119 0)
  keep date b_r_sp
  rename b_r_sp beta120_r_natgas
  save `f_nat120', replace
restore

// Corn 120-day
preserve
  rangestat (reg) r_corn   r_sp, interval(date -119 0)
  keep date b_r_sp
  rename b_r_sp beta120_r_corn
  save `f_corn120', replace
restore

// Wheat 120-day 
preserve
  rangestat (reg) r_wheat  r_sp, interval(date -119 0)
  keep date b_r_sp
  rename b_r_sp beta120_r_wheat
  save `f_wheat120', replace
restore

// Soybean 120-day 
preserve
  rangestat (reg) r_soybean r_sp, interval(date -119 0)
  keep date b_r_sp
  rename b_r_sp beta120_r_soybean
  save `f_soy120', replace
restore

merge 1:1 date using `f_wti120'
drop _merge
merge 1:1 date using `f_brent120'
drop _merge
merge 1:1 date using `f_nat120'
drop _merge
merge 1:1 date using `f_corn120'
drop _merge
merge 1:1 date using `f_wheat120'
drop _merge
merge 1:1 date using `f_soy120'
drop _merge

save vix_all_frequencies.dta, replace

tsset date

local assets wti brent natgas corn wheat soybean sp

set scheme journal
use vix_all_frequencies.dta, clear
tsset date
local assets wti brent natgas corn wheat soybean sp
local start30  = td(01feb1990)
local start60  = td(01mar1990)
local start120 = td(01may1990)
local end      = td(31dec2024)

foreach a in `assets' {
    local Asset = proper("`a'")
    if "`a'" == "sp" local Asset = "S&P500"
    twoway line beta30_r_`a' date if date>=`start30', lcolor(red) lwidth(medium) || line beta60_r_`a' date if date>=`start60', lcolor(blue) lwidth(medium) || line beta120_r_`a' date if date>=`start120', lcolor(black) lwidth(medium) yline(1, lpattern(dash) lcolor(red) lwidth(thin)) yscale(range(-3 3)) legend(order(1 "30-day" 2 "60-day" 3 "120-day") cols(1) size(vsmall)) title("Rolling β: `Asset' (30/60/120-day)", size(small)) subtitle("Feb/Mar/May 1990–Dec 2024", size(vsmall) color(gs8)) xtitle("Date", size(vsmall)) ytitle("β", size(vsmall)) xlabel(, format(%tdCY) labsize(vsmall) angle(45) grid) ylabel(-3(1)3, labsize(vsmall) angle(horizontal) grid) graphregion(color(white)) bgcolor(white) name(rolling_`a', replace)
    graph save rolling_beta30_60_120_`a'.gph, replace
    graph export rolling_beta30_60_120_`a'.png, replace width(1200)
}

// natural gas + brent + wti 30
twoway (line beta30_r_wti    date if date>=`start30', lcolor(red)   lwidth(medium)) (line beta30_r_brent date if date>=`start30', lcolor(blue)  lwidth(medium)) (line beta30_r_natgas date if date>=`start30', lcolor(black) lwidth(medium)), yline(1, lpattern(dash) lcolor(red) lwidth(thin)) yscale(range(-3 3)) legend(order(1 "WTI" 2 "Brent" 3 "NatGas") cols(1) size(vsmall)) title("30-Day Rolling Beta: WTI vs. Brent vs. NatGas", size(small)) subtitle("Feb 1990–Dec 2024", size(vsmall) color(gs8)) xtitle("Date", size(vsmall)) ytitle("Beta", size(vsmall)) xlabel(, format(%tdCY) labsize(vsmall) angle(45) grid) ylabel(-3(1)3, labsize(vsmall) angle(horizontal) grid) graphregion(color(white)) bgcolor(white) name(beta30_wti_brent_natgas, replace)
graph save beta30_wti_brent_natgas.gph, replace

// soybean, corn wheat 30
twoway (line beta30_r_soybean date if date>=`start30', lcolor(red)   lwidth(medium)) (line beta30_r_wheat date if date>=`start30', lcolor(blue)  lwidth(medium)) (line beta30_r_corn    date if date>=`start30', lcolor(black) lwidth(medium)), yline(1, lpattern(dash) lcolor(red) lwidth(thin)) yscale(range(-3 3)) legend(order(1 "Soybean" 2 "Wheat" 3 "Corn") cols(1) size(vsmall)) title("30-Day Rolling Beta: Soybean, Wheat & Corn", size(small)) subtitle("Feb 1990–Dec 2024", size(vsmall) color(gs8)) xtitle("Date", size(vsmall)) ytitle("Beta", size(vsmall)) xlabel(, format(%tdCY) labsize(vsmall) angle(45) grid) ylabel(-3(1)3, labsize(vsmall) angle(horizontal) grid) graphregion(color(white)) bgcolor(white) name(beta30_soy_wheat_corn, replace)
graph save beta30_soy_wheat_corn.gph, replace

//60
twoway (line beta60_r_wti    date if date>=`start60', lcolor(red)   lwidth(medium)) (line beta60_r_brent date if date>=`start60', lcolor(blue)  lwidth(medium)) (line beta60_r_natgas  date if date>=`start60', lcolor(black) lwidth(medium)), yline(1, lpattern(dash) lcolor(red) lwidth(thin)) yscale(range(-3 3)) legend(order(1 "WTI" 2 "Brent" 3 "NatGas") cols(1) size(vsmall)) title("60-Day Rolling Beta: WTI vs. Brent vs. NatGas", size(small)) subtitle("Mar 1990–Dec 2024", size(vsmall) color(gs8)) xtitle("Date", size(vsmall)) ytitle("Beta", size(vsmall)) xlabel(, format(%tdCY) labsize(vsmall) angle(45) grid) ylabel(-3(1)3, labsize(vsmall)) graphregion(color(white)) bgcolor(white) name(beta60_wti_brent_natgas, replace)
graph save beta60_wti_brent_natgas.gph, replace

twoway (line beta60_r_soybean date if date>=`start60', lcolor(red)   lwidth(medium)) (line beta60_r_wheat   date if date>=`start60', lcolor(blue)  lwidth(medium)) (line beta60_r_corn    date if date>=`start60', lcolor(black) lwidth(medium)), yline(1, lpattern(dash) lcolor(red) lwidth(thin)) yscale(range(-3 3)) legend(order(1 "Soybean" 2 "Wheat" 3 "Corn") cols(1) size(vsmall)) title("60-Day Rolling Beta: Soybean, Wheat & Corn", size(small)) subtitle("Mar 1990–Dec 2024", size(vsmall) color(gs8)) xtitle("Date", size(vsmall)) ytitle("Beta", size(vsmall)) xlabel(, format(%tdCY) labsize(vsmall) angle(45) grid) ylabel(-3(1)3, labsize(vsmall)) graphregion(color(white)) bgcolor(white) name(beta60_soy_wheat_corn, replace)
graph save beta60_soy_wheat_corn.gph, replace

//120
twoway (line beta120_r_wti    date if date>=`start120', lcolor(red)   lwidth(medium)) (line beta120_r_brent date if date>=`start120', lcolor(blue)  lwidth(medium)) (line beta120_r_natgas  date if date>=`start120', lcolor(black) lwidth(medium)), yline(1, lpattern(dash) lcolor(red) lwidth(thin)) yscale(range(-3 3)) legend(order(1 "WTI" 2 "Brent" 3 "NatGas") cols(1) size(vsmall)) title("120-Day Rolling Beta: WTI vs. Brent vs. NatGas", size(small)) subtitle("May 1990–Dec 2024", size(vsmall) color(gs8)) xtitle("Date", size(vsmall)) ytitle("Beta", size(vsmall)) xlabel(, format(%tdCY) labsize(vsmall) angle(45) grid) ylabel(-3(1)3, labsize(vsmall)) graphregion(color(white)) bgcolor(white) name(beta120_wti_brent_natgas, replace)
graph save beta120_wti_brent_natgas.gph, replace

twoway (line beta120_r_soybean date if date>=`start120', lcolor(red)   lwidth(medium)) (line beta120_r_wheat   date if date>=`start120', lcolor(blue)  lwidth(medium)) (line beta120_r_corn    date if date>=`start120', lcolor(black) lwidth(medium)), yline(1, lpattern(dash) lcolor(red) lwidth(thin)) yscale(range(-3 3)) legend(order(1 "Soybean" 2 "Wheat" 3 "Corn") cols(1) size(vsmall)) title("120-Day Rolling Beta: Soybean, Wheat & Corn", size(small)) subtitle("May 1990–Dec 2024", size(vsmall) color(gs8)) xtitle("Date", size(vsmall)) ytitle("Beta", size(vsmall)) xlabel(, format(%tdCY) labsize(vsmall) angle(45) grid) ylabel(-3(1)3, labsize(vsmall)) graphregion(color(white)) bgcolor(white) name(beta120_soy_wheat_corn, replace)
graph save beta120_soy_wheat_corn.gph, replace

//Shaders applied
gen byte GFC   = inrange(date, td(15sep2008), td(9mar2009))
label var GFC  "Great Financial Crisis"
gen byte COVID = inrange(date, td(20feb2020), td(30apr2020))
label var COVID "COVID-19 shock"

local suffix    wti brent natgas corn wheat soybean
local pretty    WTI Brent "Natural gas" Corn Wheat Soybean
local cutoff    = td(1jan2025)

// Loop for GFC and Covid
local i = 1
foreach c of local suffix {
    local pname : word `i' of `pretty'
    quietly summarize beta60_r_`c' if date<`cutoff'
    local ymin = r(min)
    local ymax = r(max)
    tempvar shade
    gen double `shade' = (`ymax' - `ymin') if GFC==1 | COVID==1

    twoway (bar `shade' date if date<`cutoff', barwidth(1) base(`ymin') fcolor(gs12%30)) (line beta60_r_`c' date if date<`cutoff', lcolor(black) lwidth(medium)), scheme(s1color) title("`pname' 60-Day Rolling β", size(medium)) subtitle("Shaded: Great Financial Crisis & COVID-19", size(small)) xtitle("Date", size(small)) ytitle("β₆₀", size(small)) xlabel(, format(%tdCY) angle(45) labsize(vsmall)) ylabel(, grid labsize(vsmall)) yline(1, lpattern(dash) lcolor(red)) legend(off) graphregion(color(white)) plotregion(margin(5 5 5 5)) aspectratio(0.6) name(rolling60_`c', replace)

    local ++i
}

graph combine rolling60_wti rolling60_brent rolling60_natgas rolling60_corn rolling60_wheat rolling60_soybean, cols(3) xcommon ycommon imargin(zero) title("60-Day Rolling β for Oil, Gas & Grains") subtitle("Shaded: Great Financial Crisis & COVID-19") name(rolling60_all, replace)

//Loop for 90th percentile VIX method
foreach c of local suffix {
    local pname : word `i' of `pretty'
    quietly summarize beta60_r_`c' if date<`cutoff'
    local ymin = r(min)
    local ymax = r(max)
    tempvar shade
    gen double `shade' = (`ymax'-`ymin') if crisis10==1

    twoway (bar `shade' date if date<`cutoff', barwidth(1) base(`ymin') fcolor(gs12%20)) (line beta60_r_`c' date if date<`cutoff', lcolor(black) lwidth(medium)), scheme(s1color) title("`pname' 60-Day Rolling β", size(medium)) subtitle("Shaded: VIX top decile", size(small)) xtitle("Date", size(small)) ytitle("β₆₀", size(small)) xlabel(, format(%tdCY) angle(45) labsize(vsmall)) ylabel(, grid labsize(vsmall)) yline(1, lpattern(dash) lcolor(red)) legend(off) graphregion(color(white)) plotregion(margin(5 5 5 5)) aspectratio(0.6) name(rolling60_vix_`c', replace)

    local ++i
}

graph combine rolling60_vix_wti rolling60_vix_brent rolling60_vix_natgas rolling60_vix_corn rolling60_vix_wheat rolling60_vix_soybean, cols(3) xcommon ycommon imargin(zero) title("60-Day Rolling β — VIX Top Decile") subtitle("Shaded: VIX ≥ 90th percentile") name(rolling60_vix_all, replace)

/// GARCH
use vix_all_frequencies.dta, clear
local assets r_wti r_brent r_natgas_d r_corn_d r_wheat_d r_soybean_d

tempname garch_handle
postfile `garch_handle' str20 asset double ll double aic double bic using garch_ic.dta, replace

foreach a of local assets {
    display as text "Estimating Gaussian GARCH(1,1) for `a'"
    arch `a', arch(1) garch(1) distribution(normal) nocons
    local ll = e(ll)          
    local k  = e(df_m)        
    local n  = e(N)           
    local aic = `=-2*`ll' + 2*`k''
    local bic = `=-2*`ll' + ln(`n')*`k''
    post `handle' ("`a'") (`ll') (`aic') (`bic')
    display as text ""
}
postclose `garch_handle'

//HVAR 
local grains r_corn_d r_wheat_d r_soybean_d
matrix results = J(3,6,.)
local i = 1
foreach a of local grains {
    display as text "Running HAR‐RV regression for `a'  ..."
    gen rv_`a' = `a'^2
    rangestat (mean) rv_w=rv_`a', interval(date -4 0)
    rangestat (mean) rv_m=rv_`a', interval(date -22 0)
    drop if missing(L.rv_`a') | missing(rv_w) | missing(rv_m)
    quietly regress rv_`a' L.rv_`a' rv_w rv_m
    matrix results[`i',1] = _b[L.rv_`a']
    matrix results[`i',2] = _se[L.rv_`a']
    matrix results[`i',3] = _b[rv_w]
    matrix results[`i',4] = _se[rv_w]
    matrix results[`i',5] = _b[rv_m]
    matrix results[`i',6] = _se[rv_m]
    local ++i
    drop rv_`a' rv_w rv_m
} 

//Graphing
local vars r_corn_d r_wheat_d r_soybean_d
local cols navy forest_red maroon

set scheme journal

local i = 1
foreach x of local vars {
    local col : word `i' of `cols'

    tsline `x', scheme(journal) name(g_`x', replace) title("Time Series of `x'", size(medium) color(black)) xtitle("Date", size(small) color(black)) ytitle("Return (%)", size(small) color(black)) ylabel(, labsize(vsmall) angle(horizontal) grid) xlabel(, labsize(vsmall) format(%tdCY) angle(45) grid) lcolor(`col') lwidth(medium) legend(off) graphregion(color(white)) bgcolor(white)

    graph save "graph_`x'.gph", replace
    graph export "tsplot_`x'.png", name(g_`x') replace

    su `x'
    sktest `x'
    local ++i
}

//Durbin-Watson
tempname dwstats
postfile `dwstats' str12 series double d using dwstats.dta, replace

foreach x in r_sp r_brent r_wti r_natgas r_corn r_wheat r_soybean {
    quietly regress `x'
    quietly estat dwatson           
    local d = r(dw)                
    post `dwstats' ("`x'") (`d')
}

postclose `dwstats'
use dwstats.dta, clear

label var series “Return series”
label var d      “Durbin–Watson d”
list, noobs clean

